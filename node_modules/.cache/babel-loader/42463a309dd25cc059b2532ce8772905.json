{"ast":null,"code":"var _jsxFileName = \"/Users/taneajoshi/Documents/Projects/BurgerBuy/src/hoc/withErrorHandler/withErrorHandler.js\";\nimport React, { Component } from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../aux';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        error: null\n      };\n\n      this.errorConfirmedHandler = () => {\n        this.setState({\n          error: null\n        });\n      };\n    }\n\n    componentDidMount() {\n      axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      axios.interceptors.response.use(res => res, error => {\n        this.setState({\n          error: error\n        });\n      });\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.error,\n        clicked: this.errorConfirmedHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }\n      }, this.state.error ? this.state.error.message : null), /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      })));\n    }\n\n  }, _temp;\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/Users/taneajoshi/Documents/Projects/BurgerBuy/src/hoc/withErrorHandler/withErrorHandler.js"],"names":["React","Component","Modal","Aux","withErrorHandler","WrappedComponent","axios","state","error","errorConfirmedHandler","setState","componentDidMount","interceptors","request","use","req","response","res","render","message","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,MAAMC,gBAAgB,GAAE,CAACC,gBAAD,EAAmBC,KAAnB,KAA4B;AAAA;;AAChD,iBAAO,cAAcL,SAAd,CAAwB;AAAA;AAAA;AAAA,WAC3BM,KAD2B,GACrB;AACFC,QAAAA,KAAK,EAAC;AADJ,OADqB;;AAAA,WAc3BC,qBAd2B,GAcJ,MAAK;AACxB,aAAKC,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAC;AAAP,SAAd;AACH,OAhB0B;AAAA;;AAI3BG,IAAAA,iBAAiB,GAAG;AAChBL,MAAAA,KAAK,CAACM,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,GAAG,IAAE;AAChC,aAAKL,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAC;AAAP,SAAd;AACA,eAAOO,GAAP;AACH,OAHD;AAIAT,MAAAA,KAAK,CAACM,YAAN,CAAmBI,QAAnB,CAA4BF,GAA5B,CAAgCG,GAAG,IAAEA,GAArC,EAA0CT,KAAK,IAAE;AACjD,aAAKE,QAAL,CAAc;AAACF,UAAAA,KAAK,EAACA;AAAP,SAAd;AACC,OAFD;AAGH;;AAKDU,IAAAA,MAAM,GAAE;AACJ,0BAGG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACK,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWC,KAAxB;AACA,QAAA,OAAO,EAAE,KAAKC,qBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG,KAAKF,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWC,KAAX,CAAiBW,OAApC,GAA6C,IAFhD,CADL,eAKK,oBAAC,gBAAD,oBAAsB,KAAKC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALL,CAHH;AAaH;;AA/B0B,GAA/B;AAiCH,CAlCD;;AAqCA,eAAehB,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../aux';\n\nconst withErrorHandler =(WrappedComponent, axios )=>{\n    return class extends Component {\n        state={\n            error:null\n        }\n        componentDidMount() { \n            axios.interceptors.request.use(req=>{\n                this.setState({error:null});\n                return req;\n            })\n            axios.interceptors.response.use(res=>res, error=>{\n            this.setState({error:error})\n            }); \n        }\n\n        errorConfirmedHandler =() =>{\n            this.setState({error:null})\n        }\n        render(){\n            return(\n                \n                \n               <Aux>\n                    <Modal show={this.state.error}\n                    clicked={this.errorConfirmedHandler}>\n                     { this.state.error ? this.state.error.message: null}\n                    </Modal>\n                    <WrappedComponent {...this.props}/>\n                </Aux>\n         \n         \n            )\n        }\n    }\n} \n \n\nexport default withErrorHandler;"]},"metadata":{},"sourceType":"module"}