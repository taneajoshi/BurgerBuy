{"ast":null,"code":"var _jsxFileName = \"/Users/taneajoshi/Documents/Projects/BurgerBuy/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: .3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      //Base Price\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients //To distribute the pops of old ingredient sate into this new object.\n\n      }; //Update Count\n\n      updatedIngredients[type] = updatedCount; //Update Price\n\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'Tanea Joshi',\n          address: {\n            street: 'JustaTeststreet 1',\n            zipCode: '263139',\n            country: 'India'\n          },\n          email: 'tanea@gmail.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.jsn', order).then(res => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(error => this.setState({\n        loading: false,\n        purchasing: false\n      }));\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients //To distribute the pops of old ingredient sate into this new object.\n\n      };\n      updatedIngredients[type] = updatedCount; //Update Price\n\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://big-burger-builder.firebaseio.com/ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    });\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 28\n        }\n      });\n    }\n\n    let burger = /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 23\n      }\n    });\n\n    if (this.state.ingredients) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        purchasable: this.state.purchasable,\n        price: this.state.totalPrice,\n        ordered: this.purchaseHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        ingredients: this.state.ingredients,\n        purchaseContinued: this.purchaseContinueHandler,\n        price: this.state.totalPrice,\n        purchaseCancelled: this.purchaseCancelHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 34\n        }\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 28\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/Users/taneajoshi/Documents/Projects/BurgerBuy/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","res","catch","error","removeIngredientHandler","priceDeduction","componentDidMount","get","response","data","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../hoc/aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst INGREDIENT_PRICES={\n    salad:0.5,\n    cheese:0.4,\n    meat:.3, \n    bacon:0.7\n};\n\nclass BurgerBuilder extends Component{\n    // constructor(props){\n    //     super(props);\n    //     this.state = {...}\n    // } This is old way\n    state= {\n        ingredients :null,\n        totalPrice:4, //Base Price\n        purchasable: false,\n        purchasing:false,\n        loading: false\n    }\n\n    componentDidMount(){\n        axios.get('https://big-burger-builder.firebaseio.com/ingredients.json')\n        .then(response=> {\n            this.setState({ingredients :response.data})\n        })\n    }\n    updatePurchaseState(ingredients    ){\n          \n          const sum = Object.keys(ingredients).map(igKey=>{\n              return ingredients[igKey];\n          }).reduce((sum,el)=>{\n              return sum+el;\n          },0);\n          this.setState({purchasable: sum>0});\n    }\n\n\n    addIngredientHandler = (type)=>{\n     const oldCount = this.state.ingredients[type];\n     const updatedCount = oldCount+1;\n     const updatedIngredients= {\n         ...this.state.ingredients //To distribute the pops of old ingredient sate into this new object.\n     };\n     //Update Count\n     updatedIngredients[type]= updatedCount;\n     //Update Price\n     const priceAddition = INGREDIENT_PRICES[type];\n     const oldPrice = this.state.totalPrice;\n     const newPrice = oldPrice+priceAddition;\n     this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n     this.updatePurchaseState(updatedIngredients); \n      \n    }\n    purchaseHandler =()=>{\n        this.setState({purchasing: true});\n\n    }\n    purchaseCancelHandler =()=> {\n        this.setState({purchasing:false})\n    }\n    purchaseContinueHandler=()=>{\n        this.setState({loading: true});\n        const order = {\n\n            ingredients: this.state.ingredients,\n            price: this.state.totalPrice,\n            customer:{\n                name: 'Tanea Joshi',\n                address:{\n                    street: 'JustaTeststreet 1',\n                    zipCode: '263139',\n                    country: 'India'\n                },\n                email:'tanea@gmail.com'\n            },\n            deliveryMethod: 'fastest'\n        }\n\n       axios.post('/orders.jsn', order)\n       .then(res => {\n           this.setState({loading:false, purchasing: false})\n       })\n       .catch(error=>  this.setState({loading:false, purchasing: false}));\n\n       }\n\n\n    removeIngredientHandler = (type)=>{\n        const oldCount = this.state.ingredients[type];\n        if(oldCount <=0){\n            return;\n        }\n        const updatedCount = oldCount-1;\n        const updatedIngredients= {\n            ...this.state.ingredients //To distribute the pops of old ingredient sate into this new object.\n        };\n        updatedIngredients[type]= updatedCount;\n     //Update Price\n     const priceDeduction = INGREDIENT_PRICES[type];\n     const oldPrice = this.state.totalPrice;\n     const newPrice = oldPrice-priceDeduction;\n     this.setState({totalPrice: newPrice, ingredients: updatedIngredients}); \n     this.updatePurchaseState(updatedIngredients); \n    }\n    render(){\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for (let key in disabledInfo)\n        {\n            disabledInfo[key]= disabledInfo[key]<=0\n        }\n        let orderSummary = null;\n\n        if(this.state.loading){\n            orderSummary = <Spinner/>\n         \n        }\n         let burger = <Spinner/>\n\n         if(this.state.ingredients){\n            burger =  (\n                <Aux>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuildControls \n                ingredientAdded= {this.addIngredientHandler}\n                ingredientRemoved= {this.removeIngredientHandler}\n                 disabled={disabledInfo}\n                 purchasable={this.state.purchasable}\n                 price={this.state.totalPrice}\n                 ordered={this.purchaseHandler}\n                 />\n                 </Aux>\n                 );\n                 orderSummary =  <OrderSummary ingredients={this.state.ingredients}\n                 purchaseContinued={this.purchaseContinueHandler} \n                 price={this.state.totalPrice}\n                 purchaseCancelled={this.purchaseCancelHandler}\n             />;\n            }\n         if(this.state.loading){\n            orderSummary = <Spinner/>\n         \n        }\n        \n        \n        return (\n            <Aux>\n            <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n               {orderSummary}\n            </Modal> \n             {burger}\n            </Aux>\n        );\n    }\n}\n\nexport default withErrorHandler(BurgerBuilder,axios);"]},"metadata":{},"sourceType":"module"}