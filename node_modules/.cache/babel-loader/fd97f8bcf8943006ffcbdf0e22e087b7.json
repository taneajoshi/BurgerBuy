{"ast":null,"code":"var _jsxFileName = \"/Users/taneajoshi/Documents/Projects/BurgerBuy/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: .3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      //Base Price\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients //To distribute the pops of old ingredient sate into this new object.\n\n      }; //Update Count\n\n      updatedIngredients[type] = updatedCount; //Update Price\n\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'Tanea Joshi',\n          address: {\n            street: 'JustaTeststreet 1',\n            zipCode: '263139',\n            country: 'India'\n          },\n          email: 'tanea@gmail.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(res => console.log(res)).catch(error => console.log(error));\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients //To distribute the pops of old ingredient sate into this new object.\n\n      };\n      updatedIngredients[type] = updatedCount; //Update Price\n\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      purchaseContinued: this.purchaseContinueHandler,\n      price: this.state.totalPrice,\n      purchaseCancelled: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      purchasable: this.state.purchasable,\n      price: this.state.totalPrice,\n      ordered: this.purchaseHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 14\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/taneajoshi/Documents/Projects/BurgerBuy/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","res","console","log","catch","error","removeIngredientHandler","priceDeduction","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../hoc/aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport axios from '../../axios-orders'\nconst INGREDIENT_PRICES={\n    salad:0.5,\n    cheese:0.4,\n    meat:.3, \n    bacon:0.7\n};\n\nclass BurgerBuilder extends Component{\n    // constructor(props){\n    //     super(props);\n    //     this.state = {...}\n    // } This is old way\n    state= {\n        ingredients : {\n            salad: 0,\n            bacon:0,\n            cheese:0,\n            meat:0\n\n        },\n        totalPrice:4, //Base Price\n        purchasable: false,\n        purchasing:false\n    }\n\n    updatePurchaseState(ingredients    ){\n          \n          const sum = Object.keys(ingredients).map(igKey=>{\n              return ingredients[igKey];\n          }).reduce((sum,el)=>{\n              return sum+el;\n          },0);\n          this.setState({purchasable: sum>0});\n    }\n\n\n    addIngredientHandler = (type)=>{\n     const oldCount = this.state.ingredients[type];\n     const updatedCount = oldCount+1;\n     const updatedIngredients= {\n         ...this.state.ingredients //To distribute the pops of old ingredient sate into this new object.\n     };\n     //Update Count\n     updatedIngredients[type]= updatedCount;\n     //Update Price\n     const priceAddition = INGREDIENT_PRICES[type];\n     const oldPrice = this.state.totalPrice;\n     const newPrice = oldPrice+priceAddition;\n     this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n     this.updatePurchaseState(updatedIngredients); \n      \n    }\n    purchaseHandler =()=>{\n        this.setState({purchasing: true});\n\n    }\n    purchaseCancelHandler =()=> {\n        this.setState({purchasing:false})\n    }\n    purchaseContinueHandler=()=>{\n        const order = {\n            ingredients: this.state.ingredients,\n            price: this.state.totalPrice,\n            customer:{\n                name: 'Tanea Joshi',\n                address:{\n                    street: 'JustaTeststreet 1',\n                    zipCode: '263139',\n                    country: 'India'\n                },\n                email:'tanea@gmail.com'\n            },\n            deliveryMethod: 'fastest'\n        }\n\n       axios.post('/orders.json', order)\n       .then(res => console.log(res))\n       .catch(error=> console.log(error));\n\n       }\n\n\n    removeIngredientHandler = (type)=>{\n        const oldCount = this.state.ingredients[type];\n        if(oldCount <=0){\n            return;\n        }\n        const updatedCount = oldCount-1;\n        const updatedIngredients= {\n            ...this.state.ingredients //To distribute the pops of old ingredient sate into this new object.\n        };\n        updatedIngredients[type]= updatedCount;\n     //Update Price\n     const priceDeduction = INGREDIENT_PRICES[type];\n     const oldPrice = this.state.totalPrice;\n     const newPrice = oldPrice-priceDeduction;\n     this.setState({totalPrice: newPrice, ingredients: updatedIngredients}); \n     this.updatePurchaseState(updatedIngredients); \n    }\n    render(){\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for (let key in disabledInfo)\n        {\n            disabledInfo[key]= disabledInfo[key]<=0\n        }\n        \n        return (\n            <Aux>\n            <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                <OrderSummary ingredients={this.state.ingredients}\n                purchaseContinued={this.purchaseContinueHandler} \n                price={this.state.totalPrice}\n                purchaseCancelled={this.purchaseCancelHandler}\n                 />\n            </Modal> \n             <Burger ingredients={this.state.ingredients}/>\n             <BuildControls \n             ingredientAdded= {this.addIngredientHandler}\n             ingredientRemoved= {this.removeIngredientHandler}\n              disabled={disabledInfo}\n              purchasable={this.state.purchasable}\n              price={this.state.totalPrice}\n              ordered={this.purchaseHandler}\n              />\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}